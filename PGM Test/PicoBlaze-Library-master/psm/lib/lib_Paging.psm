; EMACS settings: -*-  tab-width: 2; indent-tabs-mode: t -*-
; vim: tabstop=2:shiftwidth=2:noexpandtab
; kate: tab-width 2; replace-tabs off; indent-width 2;
; 
; ==============================================================================
; Authors:					Patrick Lehmann
;
; Assembler-Code:		PicoBlaze library for long jumps/calls across Page boundaries
; 
; Description:
; ------------------------------------
;		TODO
;		
;
; License:
; ==============================================================================
; Copyright 2012-2015 Patrick Lehmann - Dresden, Germany
; 
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
; 
;		http://www.apache.org/licenses/LICENSE-2.0
; 
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
; ==============================================================================
;
;
;PRAGMA function __Pager_PageX_Call_Table1 begin
__Pager_Page0_Call_Table1:			OUTPUTK		0'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page1_Call_Table1:			OUTPUTK		1'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page2_Call_Table1:			OUTPUTK		2'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page3_Call_Table1:			OUTPUTK		3'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page4_Call_Table1:			OUTPUTK		4'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page5_Call_Table1:			OUTPUTK		5'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page6_Call_Table1:			OUTPUTK		6'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table1
__Pager_Page7_Call_Table1:			OUTPUTK		7'd,				KPORT_INSTROM_PAGENUMBER
	_Pager_Page_Call_Table1:			LOAD			REG_PTR_H,	0'd
																ADD				REG_PTR_L,	__FunctionTable1'lower
																ADDCY			REG_PTR_H,	__FunctionTable1'upper
																CALL@			(REG_PTR_H, REG_PTR_L)
																;
																OUTPUTK		0'd,				KPORT_INSTROM_PAGENUMBER
																RETURN
;PRAGMA function end
;
;PRAGMA function __Pager_PageX_Call_Table2 begin
__Pager_Page0_Call_Table2:			OUTPUTK		0'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page1_Call_Table2:			OUTPUTK		1'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page2_Call_Table2:			OUTPUTK		2'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page3_Call_Table2:			OUTPUTK		3'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page4_Call_Table2:			OUTPUTK		4'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page5_Call_Table2:			OUTPUTK		5'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page6_Call_Table2:			OUTPUTK		6'd,				KPORT_INSTROM_PAGENUMBER
																JUMP			_Pager_Page_Call_Table2
__Pager_Page7_Call_Table2:			OUTPUTK		7'd,				KPORT_INSTROM_PAGENUMBER
	_Pager_Page_Call_Table2:			LOAD			REG_PTR_H,	0'd
																ADD				REG_PTR_L,	__FunctionTable2'lower
																ADDCY			REG_PTR_H,	__FunctionTable2'upper
																CALL@			(REG_PTR_H, REG_PTR_L)
																;
																OUTPUTK		0'd,				KPORT_INSTROM_PAGENUMBER
																RETURN
;PRAGMA function end
;
;PRAGMA function __Pager_Page0_HandleInterrupt begin
__Pager_Page0_HandleInterrupt:	OUTPUTK		0'd,				KPORT_INSTROM_PAGENUMBER
																CALL@			(REG_PTR_H, REG_PTR_L)
																;
																OUTPUTK		1'd,				KPORT_INSTROM_PAGENUMBER
																RETURNI	ENABLE
;PRAGMA function end
